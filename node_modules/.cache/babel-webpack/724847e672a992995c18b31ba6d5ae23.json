{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs')) : typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs'], factory) : factory(global['ng4-loading-spinner'] = {}, global['@angular/core'], global.rxjs);\n})(this, function (exports, core, rxjs) {\n  'use strict';\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes} checked by tsc\r\n   */\n\n  /**\r\n   * Injectable service\r\n   * @export\r\n   */\n\n  var Ng4LoadingSpinnerService =\n  /** @class */\n  function () {\n    /**\r\n     * Creates an instance of Ng4LoadingSpinnerService.\r\n     * @memberof Ng4LoadingSpinnerService\r\n     */\n    function Ng4LoadingSpinnerService() {\n      /**\r\n       * \\@description spinners BehaviorSubject\r\n       * \\@memberof Ng4LoadingSpinnerService\r\n       */\n      this.spinnerSubject = new rxjs.BehaviorSubject(false);\n    }\n    /**\r\n     * To show spinner\r\n     * @memberof Ng4LoadingSpinnerService\r\n     */\n\n    /**\r\n     * To show spinner\r\n     * \\@memberof Ng4LoadingSpinnerService\r\n     * @return {?}\r\n     */\n\n\n    Ng4LoadingSpinnerService.prototype.show =\n    /**\r\n    * To show spinner\r\n    * \\@memberof Ng4LoadingSpinnerService\r\n    * @return {?}\r\n    */\n    function () {\n      this.spinnerSubject.next(true);\n    };\n    /**\r\n     * To hide spinner\r\n     * @memberof Ng4LoadingSpinnerService\r\n     */\n\n    /**\r\n     * To hide spinner\r\n     * \\@memberof Ng4LoadingSpinnerService\r\n     * @return {?}\r\n     */\n\n\n    Ng4LoadingSpinnerService.prototype.hide =\n    /**\r\n    * To hide spinner\r\n    * \\@memberof Ng4LoadingSpinnerService\r\n    * @return {?}\r\n    */\n    function () {\n      this.spinnerSubject.next(false);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    Ng4LoadingSpinnerService.prototype.getMessage =\n    /**\r\n    * @return {?}\r\n    */\n    function () {\n      return this.spinnerSubject.asObservable();\n    };\n\n    Ng4LoadingSpinnerService.decorators = [{\n      type: core.Injectable\n    }];\n    /** @nocollapse */\n\n    Ng4LoadingSpinnerService.ctorParameters = function () {\n      return [];\n    };\n\n    return Ng4LoadingSpinnerService;\n  }();\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes} checked by tsc\r\n   */\n\n  /**\r\n   * \\@description\r\n   * @author Amit Mahida\r\n   * @export\r\n   */\n\n\n  var Ng4LoadingSpinnerComponent =\n  /** @class */\n  function () {\n    /**\r\n     * Constructor\r\n     * @param spinnerService Spinner Service\r\n     * @memberof Ng4LoadingSpinnerComponent\r\n     */\n    function Ng4LoadingSpinnerComponent(spinnerService) {\n      this.spinnerService = spinnerService;\n      /**\r\n       * \\@description Default loading spinner template\r\n       * \\@memberof Ng4LoadingSpinnerComponent\r\n       */\n\n      this._template = \"\\n  <div class=\\\"lds-roller\\\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\";\n      /**\r\n       * \\@description Loading text\r\n       * \\@memberof Ng4LoadingSpinnerComponent\r\n       */\n\n      this._loadingText = '';\n      /**\r\n       * \\@description Defines threhold for not to diplay if time is less than 500ms\r\n       * \\@memberof Ng4LoadingSpinnerComponent\r\n       */\n\n      this._threshold = 500;\n      /**\r\n       * \\@description Defines timeout to hide after time 5000ms\r\n       * \\@memberof Ng4LoadingSpinnerComponent\r\n       */\n\n      this._timeout = 5000;\n      /**\r\n       * \\@description Defines z-index property of the loading text\r\n       * \\@memberof Ng4LoadingSpinnerComponent\r\n       */\n\n      this._zIndex = 9999;\n      /**\r\n       * \\@description Show/hide spinner\r\n       * \\@memberof Ng4LoadingSpinnerComponent\r\n       */\n\n      this.showSpinner = false;\n      this.createServiceSubscription();\n    }\n\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"zIndex\", {\n      get:\n      /**\r\n      * \\@description returns z-index for input text\r\n      * \\@readonly\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @return {?}\r\n      */\n      function get() {\n        return this._zIndex;\n      },\n      set:\n      /**\r\n      * \\@description Sets z-index for input text\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function set(value) {\n        this._zIndex = value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"template\", {\n      get:\n      /**\r\n      * \\@description Gives the current template\r\n      * \\@readonly\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @return {?}\r\n      */\n      function get() {\n        return this._template;\n      },\n      set:\n      /**\r\n      * \\@description Accepts custom template\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function set(value) {\n        this._template = value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"loadingText\", {\n      get:\n      /**\r\n      * \\@description Gives loading text\r\n      * \\@readonly\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @return {?}\r\n      */\n      function get() {\n        return this._loadingText;\n      },\n      set:\n      /**\r\n      * \\@description Accepts loading text string\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function set(value) {\n        this._loadingText = value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"threshold\", {\n      get:\n      /**\r\n      * \\@description\r\n      * \\@readonly\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @return {?}\r\n      */\n      function get() {\n        return this._threshold;\n      },\n      set:\n      /**\r\n      * \\@description Accepts external threshold\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function set(value) {\n        this._threshold = value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"timeout\", {\n      get:\n      /**\r\n      * \\@description\r\n      * \\@readonly\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @return {?}\r\n      */\n      function get() {\n        return this._timeout;\n      },\n      set:\n      /**\r\n      * \\@description Accepts external timeout\r\n      * \\@memberof Ng4LoadingSpinnerComponent\r\n      * @param {?} value\r\n      * @return {?}\r\n      */\n      function set(value) {\n        this._timeout = value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    /**\r\n     * Destroy function\r\n     * @memberof Ng4LoadingSpinnerComponent\r\n     */\n\n    /**\r\n     * Destroy function\r\n     * \\@memberof Ng4LoadingSpinnerComponent\r\n     * @return {?}\r\n     */\n\n    Ng4LoadingSpinnerComponent.prototype.ngOnDestroy =\n    /**\r\n    * Destroy function\r\n    * \\@memberof Ng4LoadingSpinnerComponent\r\n    * @return {?}\r\n    */\n    function () {\n      this.subscription.unsubscribe();\n    };\n    /**\r\n     * Create service subscription\r\n     * @memberof Ng4LoadingSpinnerComponent\r\n     */\n\n    /**\r\n     * Create service subscription\r\n     * \\@memberof Ng4LoadingSpinnerComponent\r\n     * @return {?}\r\n     */\n\n\n    Ng4LoadingSpinnerComponent.prototype.createServiceSubscription =\n    /**\r\n    * Create service subscription\r\n    * \\@memberof Ng4LoadingSpinnerComponent\r\n    * @return {?}\r\n    */\n    function () {\n      var _this = this;\n\n      var\n      /** @type {?} */\n      thresholdTimer;\n      var\n      /** @type {?} */\n      timeoutTimer;\n      this.subscription = this.spinnerService.getMessage().subscribe(function (show) {\n        if (show) {\n          if (thresholdTimer) {\n            return;\n          }\n\n          thresholdTimer = setTimeout(function () {\n            thresholdTimer = null;\n            this.showSpinner = show;\n            timeoutTimer = setTimeout(function () {\n              timeoutTimer = null;\n              this.showSpinner = false;\n            }.bind(this), this.timeout);\n          }.bind(_this), _this.threshold);\n        } else {\n          if (thresholdTimer) {\n            clearTimeout(thresholdTimer);\n            thresholdTimer = null;\n          }\n\n          clearTimeout(timeoutTimer);\n          timeoutTimer = null;\n          _this.showSpinner = false;\n        }\n      });\n    };\n\n    Ng4LoadingSpinnerComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ng4-loading-spinner',\n        template: \"<div #spinnerContainer [class]=\\\"showSpinner ? 'visible spinner center' : 'hidden spinner center'\\\" [innerHTML]=\\\"template\\\">     </div> <div id=\\\"loading-spinner-text\\\" class=\\\"loading-spinner-text\\\" [style.zIndex]=\\\"zIndex\\\" [class]=\\\"showSpinner ? 'visible loading-text' : 'hidden loading-text'\\\"> {{loadingText}} </div> \",\n        styles: [\".spinner { position: fixed; padding: 0px; top: 0; left: 0; height: 100%; width: 100%; z-index: 9998; background: #000; opacity: 0.6; transition: opacity 0.3s linear; } .center { margin: auto; width: 100%; } .loading-text { position: fixed; top: 0; width: 100%; height: 100%; left: 0; padding: 0; margin: 0; color: #FFF; font-family: sans-serif; background: transparent; text-align: center; padding-top: 33%; } .spinner img { position: fixed; padding: 0px; /* height: 100%; width: 100%; top: 0; left: 0; */ z-index: 10; background: #000; opacity: 0.6; transition: opacity 0.3s linear; } .hidden { visibility: hidden; opacity: 0; transition: visibility 0s 0.3s, opacity 0.3s linear; } .visible { visibility: visible; } .lds-roller { display: inline-block; position: relative; width: 64px; height: 64px; left: 48%; top: 47%; } .lds-roller div { animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite; transform-origin: 32px 32px; } .lds-roller div:after { content: \\\" \\\"; display: block; position: absolute; width: 6px; height: 6px; border-radius: 50%; background: #fff; margin: -3px 0 0 -3px; } .lds-roller div:nth-child(1) { animation-delay: -0.036s; } .lds-roller div:nth-child(1):after { top: 50px; left: 50px; } .lds-roller div:nth-child(2) { animation-delay: -0.072s; } .lds-roller div:nth-child(2):after { top: 54px; left: 45px; } .lds-roller div:nth-child(3) { animation-delay: -0.108s; } .lds-roller div:nth-child(3):after { top: 57px; left: 39px; } .lds-roller div:nth-child(4) { animation-delay: -0.144s; } .lds-roller div:nth-child(4):after { top: 58px; left: 32px; } .lds-roller div:nth-child(5) { animation-delay: -0.18s; } .lds-roller div:nth-child(5):after { top: 57px; left: 25px; } .lds-roller div:nth-child(6) { animation-delay: -0.216s; } .lds-roller div:nth-child(6):after { top: 54px; left: 19px; } .lds-roller div:nth-child(7) { animation-delay: -0.252s; } .lds-roller div:nth-child(7):after { top: 50px; left: 14px; } .lds-roller div:nth-child(8) { animation-delay: -0.288s; } .lds-roller div:nth-child(8):after { top: 45px; left: 10px; } @keyframes lds-roller { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } #loading-spinner-text { font-size: 26px; } .loading-spinner-text { font-size: 26px; }\"],\n        encapsulation: core.ViewEncapsulation.None\n      }]\n    }];\n    /** @nocollapse */\n\n    Ng4LoadingSpinnerComponent.ctorParameters = function () {\n      return [{\n        type: Ng4LoadingSpinnerService\n      }];\n    };\n\n    Ng4LoadingSpinnerComponent.propDecorators = {\n      \"zIndex\": [{\n        type: core.Input\n      }],\n      \"template\": [{\n        type: core.Input\n      }],\n      \"loadingText\": [{\n        type: core.Input\n      }],\n      \"threshold\": [{\n        type: core.Input\n      }],\n      \"timeout\": [{\n        type: core.Input\n      }]\n    };\n    return Ng4LoadingSpinnerComponent;\n  }();\n  /**\r\n   * @fileoverview added by tsickle\r\n   * @suppress {checkTypes} checked by tsc\r\n   */\n\n\n  var Ng4LoadingSpinnerModule =\n  /** @class */\n  function () {\n    function Ng4LoadingSpinnerModule() {}\n    /**\r\n     * @return {?}\r\n     */\n\n\n    Ng4LoadingSpinnerModule.forRoot =\n    /**\r\n    * @return {?}\r\n    */\n    function () {\n      return {\n        ngModule: Ng4LoadingSpinnerModule,\n        providers: [Ng4LoadingSpinnerService]\n      };\n    };\n\n    Ng4LoadingSpinnerModule.decorators = [{\n      type: core.NgModule,\n      args: [{\n        imports: [],\n        declarations: [Ng4LoadingSpinnerComponent],\n        exports: [Ng4LoadingSpinnerComponent],\n        providers: [Ng4LoadingSpinnerService]\n      }]\n    }];\n    return Ng4LoadingSpinnerModule;\n  }();\n\n  exports.Ng4LoadingSpinnerModule = Ng4LoadingSpinnerModule;\n  exports.Ng4LoadingSpinnerService = Ng4LoadingSpinnerService;\n  exports.Ng4LoadingSpinnerComponent = Ng4LoadingSpinnerComponent;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["E:/angular-website-example/node_modules/ng4-loading-spinner/ng4-loading-spinner.umd.js"],"names":["global","factory","exports","module","require","define","amd","rxjs","core","Ng4LoadingSpinnerService","spinnerSubject","BehaviorSubject","prototype","show","next","hide","getMessage","asObservable","decorators","type","Injectable","ctorParameters","Ng4LoadingSpinnerComponent","spinnerService","_template","_loadingText","_threshold","_timeout","_zIndex","showSpinner","createServiceSubscription","Object","defineProperty","get","set","value","enumerable","configurable","ngOnDestroy","subscription","unsubscribe","_this","thresholdTimer","timeoutTimer","subscribe","setTimeout","bind","timeout","threshold","clearTimeout","Component","args","selector","template","styles","encapsulation","ViewEncapsulation","None","propDecorators","Input","Ng4LoadingSpinnerModule","forRoot","ngModule","providers","NgModule","imports","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs'], factory) :\n\t(factory((global['ng4-loading-spinner'] = {}),global['@angular/core'],global.rxjs));\n}(this, (function (exports,core,rxjs) { 'use strict';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Injectable service\r\n * @export\r\n */\r\nvar Ng4LoadingSpinnerService = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of Ng4LoadingSpinnerService.\r\n     * @memberof Ng4LoadingSpinnerService\r\n     */\r\n    function Ng4LoadingSpinnerService() {\r\n        /**\r\n         * \\@description spinners BehaviorSubject\r\n         * \\@memberof Ng4LoadingSpinnerService\r\n         */\r\n        this.spinnerSubject = new rxjs.BehaviorSubject(false);\r\n    }\r\n    /**\r\n     * To show spinner\r\n     * @memberof Ng4LoadingSpinnerService\r\n     */\r\n    /**\r\n     * To show spinner\r\n     * \\@memberof Ng4LoadingSpinnerService\r\n     * @return {?}\r\n     */\r\n    Ng4LoadingSpinnerService.prototype.show = /**\r\n     * To show spinner\r\n     * \\@memberof Ng4LoadingSpinnerService\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.spinnerSubject.next(true);\r\n    };\r\n    /**\r\n     * To hide spinner\r\n     * @memberof Ng4LoadingSpinnerService\r\n     */\r\n    /**\r\n     * To hide spinner\r\n     * \\@memberof Ng4LoadingSpinnerService\r\n     * @return {?}\r\n     */\r\n    Ng4LoadingSpinnerService.prototype.hide = /**\r\n     * To hide spinner\r\n     * \\@memberof Ng4LoadingSpinnerService\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.spinnerSubject.next(false);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Ng4LoadingSpinnerService.prototype.getMessage = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.spinnerSubject.asObservable();\r\n    };\r\n    Ng4LoadingSpinnerService.decorators = [\r\n        { type: core.Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    Ng4LoadingSpinnerService.ctorParameters = function () { return []; };\r\n    return Ng4LoadingSpinnerService;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * \\@description\r\n * @author Amit Mahida\r\n * @export\r\n */\r\nvar Ng4LoadingSpinnerComponent = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param spinnerService Spinner Service\r\n     * @memberof Ng4LoadingSpinnerComponent\r\n     */\r\n    function Ng4LoadingSpinnerComponent(spinnerService) {\r\n        this.spinnerService = spinnerService;\r\n        /**\r\n         * \\@description Default loading spinner template\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         */\r\n        this._template = \"\\n  <div class=\\\"lds-roller\\\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\";\r\n        /**\r\n         * \\@description Loading text\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         */\r\n        this._loadingText = '';\r\n        /**\r\n         * \\@description Defines threhold for not to diplay if time is less than 500ms\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         */\r\n        this._threshold = 500;\r\n        /**\r\n         * \\@description Defines timeout to hide after time 5000ms\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         */\r\n        this._timeout = 5000;\r\n        /**\r\n         * \\@description Defines z-index property of the loading text\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         */\r\n        this._zIndex = 9999;\r\n        /**\r\n         * \\@description Show/hide spinner\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         */\r\n        this.showSpinner = false;\r\n        this.createServiceSubscription();\r\n    }\r\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"zIndex\", {\r\n        get: /**\r\n         * \\@description returns z-index for input text\r\n         * \\@readonly\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._zIndex;\r\n        },\r\n        set: /**\r\n         * \\@description Sets z-index for input text\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._zIndex = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"template\", {\r\n        get: /**\r\n         * \\@description Gives the current template\r\n         * \\@readonly\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._template;\r\n        },\r\n        set: /**\r\n         * \\@description Accepts custom template\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._template = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"loadingText\", {\r\n        get: /**\r\n         * \\@description Gives loading text\r\n         * \\@readonly\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._loadingText;\r\n        },\r\n        set: /**\r\n         * \\@description Accepts loading text string\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._loadingText = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"threshold\", {\r\n        get: /**\r\n         * \\@description\r\n         * \\@readonly\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._threshold;\r\n        },\r\n        set: /**\r\n         * \\@description Accepts external threshold\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._threshold = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Ng4LoadingSpinnerComponent.prototype, \"timeout\", {\r\n        get: /**\r\n         * \\@description\r\n         * \\@readonly\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._timeout;\r\n        },\r\n        set: /**\r\n         * \\@description Accepts external timeout\r\n         * \\@memberof Ng4LoadingSpinnerComponent\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._timeout = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Destroy function\r\n     * @memberof Ng4LoadingSpinnerComponent\r\n     */\r\n    /**\r\n     * Destroy function\r\n     * \\@memberof Ng4LoadingSpinnerComponent\r\n     * @return {?}\r\n     */\r\n    Ng4LoadingSpinnerComponent.prototype.ngOnDestroy = /**\r\n     * Destroy function\r\n     * \\@memberof Ng4LoadingSpinnerComponent\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.subscription.unsubscribe();\r\n    };\r\n    /**\r\n     * Create service subscription\r\n     * @memberof Ng4LoadingSpinnerComponent\r\n     */\r\n    /**\r\n     * Create service subscription\r\n     * \\@memberof Ng4LoadingSpinnerComponent\r\n     * @return {?}\r\n     */\r\n    Ng4LoadingSpinnerComponent.prototype.createServiceSubscription = /**\r\n     * Create service subscription\r\n     * \\@memberof Ng4LoadingSpinnerComponent\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        var /** @type {?} */ thresholdTimer;\r\n        var /** @type {?} */ timeoutTimer;\r\n        this.subscription =\r\n            this.spinnerService.getMessage().subscribe(function (show) {\r\n                if (show) {\r\n                    if (thresholdTimer) {\r\n                        return;\r\n                    }\r\n                    thresholdTimer = setTimeout(function () {\r\n                        thresholdTimer = null;\r\n                        this.showSpinner = show;\r\n                        timeoutTimer = setTimeout(function () {\r\n                            timeoutTimer = null;\r\n                            this.showSpinner = false;\r\n                        }.bind(this), this.timeout);\r\n                    }.bind(_this), _this.threshold);\r\n                }\r\n                else {\r\n                    if (thresholdTimer) {\r\n                        clearTimeout(thresholdTimer);\r\n                        thresholdTimer = null;\r\n                    }\r\n                    clearTimeout(timeoutTimer);\r\n                    timeoutTimer = null;\r\n                    _this.showSpinner = false;\r\n                }\r\n            });\r\n    };\r\n    Ng4LoadingSpinnerComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ng4-loading-spinner',\r\n                    template: \"<div #spinnerContainer [class]=\\\"showSpinner ? 'visible spinner center' : 'hidden spinner center'\\\" [innerHTML]=\\\"template\\\">     </div> <div id=\\\"loading-spinner-text\\\" class=\\\"loading-spinner-text\\\" [style.zIndex]=\\\"zIndex\\\" [class]=\\\"showSpinner ? 'visible loading-text' : 'hidden loading-text'\\\"> {{loadingText}} </div> \",\r\n                    styles: [\".spinner { position: fixed; padding: 0px; top: 0; left: 0; height: 100%; width: 100%; z-index: 9998; background: #000; opacity: 0.6; transition: opacity 0.3s linear; } .center { margin: auto; width: 100%; } .loading-text { position: fixed; top: 0; width: 100%; height: 100%; left: 0; padding: 0; margin: 0; color: #FFF; font-family: sans-serif; background: transparent; text-align: center; padding-top: 33%; } .spinner img { position: fixed; padding: 0px; /* height: 100%; width: 100%; top: 0; left: 0; */ z-index: 10; background: #000; opacity: 0.6; transition: opacity 0.3s linear; } .hidden { visibility: hidden; opacity: 0; transition: visibility 0s 0.3s, opacity 0.3s linear; } .visible { visibility: visible; } .lds-roller { display: inline-block; position: relative; width: 64px; height: 64px; left: 48%; top: 47%; } .lds-roller div { animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite; transform-origin: 32px 32px; } .lds-roller div:after { content: \\\" \\\"; display: block; position: absolute; width: 6px; height: 6px; border-radius: 50%; background: #fff; margin: -3px 0 0 -3px; } .lds-roller div:nth-child(1) { animation-delay: -0.036s; } .lds-roller div:nth-child(1):after { top: 50px; left: 50px; } .lds-roller div:nth-child(2) { animation-delay: -0.072s; } .lds-roller div:nth-child(2):after { top: 54px; left: 45px; } .lds-roller div:nth-child(3) { animation-delay: -0.108s; } .lds-roller div:nth-child(3):after { top: 57px; left: 39px; } .lds-roller div:nth-child(4) { animation-delay: -0.144s; } .lds-roller div:nth-child(4):after { top: 58px; left: 32px; } .lds-roller div:nth-child(5) { animation-delay: -0.18s; } .lds-roller div:nth-child(5):after { top: 57px; left: 25px; } .lds-roller div:nth-child(6) { animation-delay: -0.216s; } .lds-roller div:nth-child(6):after { top: 54px; left: 19px; } .lds-roller div:nth-child(7) { animation-delay: -0.252s; } .lds-roller div:nth-child(7):after { top: 50px; left: 14px; } .lds-roller div:nth-child(8) { animation-delay: -0.288s; } .lds-roller div:nth-child(8):after { top: 45px; left: 10px; } @keyframes lds-roller { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } } #loading-spinner-text { font-size: 26px; } .loading-spinner-text { font-size: 26px; }\"],\r\n                    encapsulation: core.ViewEncapsulation.None\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    Ng4LoadingSpinnerComponent.ctorParameters = function () { return [\r\n        { type: Ng4LoadingSpinnerService, },\r\n    ]; };\r\n    Ng4LoadingSpinnerComponent.propDecorators = {\r\n        \"zIndex\": [{ type: core.Input },],\r\n        \"template\": [{ type: core.Input },],\r\n        \"loadingText\": [{ type: core.Input },],\r\n        \"threshold\": [{ type: core.Input },],\r\n        \"timeout\": [{ type: core.Input },],\r\n    };\r\n    return Ng4LoadingSpinnerComponent;\r\n}());\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar Ng4LoadingSpinnerModule = /** @class */ (function () {\r\n    function Ng4LoadingSpinnerModule() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Ng4LoadingSpinnerModule.forRoot = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            ngModule: Ng4LoadingSpinnerModule,\r\n            providers: [Ng4LoadingSpinnerService]\r\n        };\r\n    };\r\n    Ng4LoadingSpinnerModule.decorators = [\r\n        { type: core.NgModule, args: [{\r\n                    imports: [],\r\n                    declarations: [Ng4LoadingSpinnerComponent],\r\n                    exports: [Ng4LoadingSpinnerComponent],\r\n                    providers: [Ng4LoadingSpinnerService]\r\n                },] },\r\n    ];\r\n    return Ng4LoadingSpinnerModule;\r\n}());\n\nexports.Ng4LoadingSpinnerModule = Ng4LoadingSpinnerModule;\nexports.Ng4LoadingSpinnerService = Ng4LoadingSpinnerService;\nexports.Ng4LoadingSpinnerComponent = Ng4LoadingSpinnerComponent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]},"metadata":{},"sourceType":"script"}