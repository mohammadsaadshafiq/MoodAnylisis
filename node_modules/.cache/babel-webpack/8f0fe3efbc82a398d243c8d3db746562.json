{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar iterator_1 = require(\"../symbol/iterator\");\n\nexports.subscribeToIterable = function (iterable) {\n  return function (subscriber) {\n    var iterator = iterable[iterator_1.iterator]();\n\n    do {\n      var item = void 0;\n\n      try {\n        item = iterator.next();\n      } catch (err) {\n        subscriber.error(err);\n        return subscriber;\n      }\n\n      if (item.done) {\n        subscriber.complete();\n        break;\n      }\n\n      subscriber.next(item.value);\n\n      if (subscriber.closed) {\n        break;\n      }\n    } while (true);\n\n    if (typeof iterator.return === 'function') {\n      subscriber.add(function () {\n        if (iterator.return) {\n          iterator.return();\n        }\n      });\n    }\n\n    return subscriber;\n  };\n};","map":{"version":3,"sources":["../../src/internal/util/subscribeToIterable.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEa,OAAA,CAAA,mBAAA,GAAsB,UAAI,QAAJ,EAAyB;AAAK,SAAA,UAAC,UAAD,EAA0B;AACzF,QAAM,QAAQ,GAAI,QAAgB,CAAC,UAAA,CAAA,QAAD,CAAhB,EAAlB;;AAEA,OAAG;AACD,UAAI,IAAI,GAAA,KAAA,CAAR;;AACA,UAAI;AACF,QAAA,IAAI,GAAG,QAAQ,CAAC,IAAT,EAAP;AACD,OAFD,CAEE,OAAO,GAAP,EAAY;AACZ,QAAA,UAAU,CAAC,KAAX,CAAiB,GAAjB;AACA,eAAO,UAAP;AACD;;AACD,UAAI,IAAI,CAAC,IAAT,EAAe;AACb,QAAA,UAAU,CAAC,QAAX;AACA;AACD;;AACD,MAAA,UAAU,CAAC,IAAX,CAAgB,IAAI,CAAC,KAArB;;AACA,UAAI,UAAU,CAAC,MAAf,EAAuB;AACrB;AACD;AACF,KAhBD,QAgBS,IAhBT;;AAmBA,QAAI,OAAO,QAAQ,CAAC,MAAhB,KAA2B,UAA/B,EAA2C;AACzC,MAAA,UAAU,CAAC,GAAX,CAAe,YAAA;AACb,YAAI,QAAQ,CAAC,MAAb,EAAqB;AACnB,UAAA,QAAQ,CAAC,MAAT;AACD;AACF,OAJD;AAKD;;AAED,WAAO,UAAP;AA9B+D,GAAA;AA+BhE,CA/BY","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar iterator_1 = require(\"../symbol/iterator\");\nexports.subscribeToIterable = function (iterable) { return function (subscriber) {\n    var iterator = iterable[iterator_1.iterator]();\n    do {\n        var item = void 0;\n        try {\n            item = iterator.next();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return subscriber;\n        }\n        if (item.done) {\n            subscriber.complete();\n            break;\n        }\n        subscriber.next(item.value);\n        if (subscriber.closed) {\n            break;\n        }\n    } while (true);\n    if (typeof iterator.return === 'function') {\n        subscriber.add(function () {\n            if (iterator.return) {\n                iterator.return();\n            }\n        });\n    }\n    return subscriber;\n}; };\n//# sourceMappingURL=subscribeToIterable.js.map"]},"metadata":{},"sourceType":"script"}